

function ebgp_peering_export(int peerasn) {
    if ( is_coloclue_supernet()
        || (8283, 2) ~ bgp_community
        || (8283, 0, 2) ~ bgp_large_community
        ) then {

        
        if ((8283, 2, peerasn) ~ bgp_large_community || (8283, 2, 0) ~ bgp_large_community) then {
            bgp_path.prepend(8283);
        }
        else if ((8283, 3, peerasn) ~ bgp_large_community || (8283, 3, 0) ~ bgp_large_community) then {
            bgp_path.prepend(8283);
            bgp_path.prepend(8283);
        }
        if ((8283, 4, peerasn) ~ bgp_large_community || (8283, 4, 0) ~ bgp_large_community) then {
            reject;
        }

        accept;
    }
    reject;
}

function ebgp_upstream_export(int peerasn) {
    if ( is_coloclue_supernet()
        || (8283, 2) ~ bgp_community
        || (8283, 0, 2) ~ bgp_large_community
        ) then {

        
        if ((8283, 2, peerasn) ~ bgp_large_community || (8283, 2, 0) ~ bgp_large_community) then {
            bgp_path.prepend(8283);
        }
        else if ((8283, 3, peerasn) ~ bgp_large_community || (8283, 3, 0) ~ bgp_large_community) then {
            bgp_path.prepend(8283);
            bgp_path.prepend(8283);
        }
        if ((8283, 4, peerasn) ~ bgp_large_community || (8283, 4, 0) ~ bgp_large_community) then {
            reject;
        }


        # prevent atom86 from sending route to NTT
        bgp_community.add((8455, 5523));

        # prevent atom86 from sending route to GTT
        bgp_community.add((8455, 5505));

        # prevent atom86 from sending route to OpenPeering
        bgp_community.add((8455, 5510));

        # request fiberring to request tata to lower the LP
        bgp_community.add((6453,70));
    
        accept;
    }
    reject;
}

function full_table_export(int peerasn) {
    if ( is_coloclue_supernet() ) then accept;
    else if ( is_coloclue_more_specific() ) then reject;
    else if ( is_bogon() ) then reject;
    else if ( bgp_path.last = 8283 ) then reject;
    else {
        
        if ((8283, 2, peerasn) ~ bgp_large_community || (8283, 2, 0) ~ bgp_large_community) then {
            bgp_path.prepend(8283);
        }
        else if ((8283, 3, peerasn) ~ bgp_large_community || (8283, 3, 0) ~ bgp_large_community) then {
            bgp_path.prepend(8283);
            bgp_path.prepend(8283);
        }
        if ((8283, 4, peerasn) ~ bgp_large_community || (8283, 4, 0) ~ bgp_large_community) then {
            reject;
        }

        accept;
    }
}

function ebgp_import(int transit_tag) 
int set bogon_asns;
{
    # Scrub BGP Communities (RFC 7454 Section 11)
    bgp_community.delete([(8283, *)]);
    bgp_large_community.delete([(8283, *, *)]);

    # Scrub BLACKHOLE community
    bgp_community.delete((65535, 666));

    # ignore bogon AS_PATHs
    bogon_asns = BOGON_ASNS;
    if ( bgp_path ~ bogon_asns ) then {
        print "Reject: bogon AS_PATH: ", net, " ", bgp_path;
        reject;
    }

    if ( is_coloclue_more_specific() ) then {
        return false;
    }

    if ( is_bogon() ) then {
        return false;
    }
    
    if is_roa_covered_prefix() then {
        if ! complies_with_roa() then {
            bgp_community.add((8283,100));
            bgp_large_community.add((8283, 0, 100));
        }
    }

    bgp_med = 0;
    bgp_community.add((8283, transit_tag));
    bgp_large_community.add((8283, 0, transit_tag));
    return true;
}