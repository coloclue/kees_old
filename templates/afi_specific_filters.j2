<%- if afi == "ipv4" -%>
<%- set maxlength = 32 -%>
<%- elif afi == "ipv6" -%>
<%- set maxlength = 128 -%>
<%- endif -%>
filter only_loopbacks {
<%- if afi == "ipv4" %>
    if net ~ [ 94.142.247.0/28{32,32} ] then accept;
<%- elif afi == "ipv6" %>
    if net ~ [ 2a02:898:0:300:0:0:0:0/64{128,128} ] then accept;
<%- endif %>
    reject;
}

function is_coloclue_supernet()
prefix set coloclue;
{
    coloclue = [
<%-
for item in coloclue.supernets 
if (afi == "ipv4" and "." in item.prefix) or (afi == "ipv6" and ":" in item.prefix)
%>
        << item.prefix >>/<< item.length >>
<%- if not loop.last %>,<% endif -%>
<%- if item.comment %>  /* << item.comment >> */<% endif -%>
<%- endfor %>
    ];
    if net ~ coloclue then return true;
    return false;
}

function is_coloclue_more_specific()
prefix set coloclue;
{
    coloclue = [
<%-
for item in coloclue.supernets
if (afi == "ipv4" and "." in item.prefix) or (afi == "ipv6" and ":" in item.prefix)
%>
        << item.prefix >>/<< item.length >>{<< item.length >>,<< maxlength >>}
<%- if not loop.last %>,<% endif -%>
<%- if item.comment %>  /* << item.comment >> */<% endif -%>
<% endfor %>
    ];
    if net ~ coloclue then return true;
    return false;
}

function is_bogon()
prefix set bogons;
{
    bogons = [
<%-
for item in bogons
if (afi == "ipv4" and "." in item.prefix) or (afi == "ipv6" and ":" in item.prefix)
%>
        << item.prefix >>/<< item.length >>{<< item.length >>,<< maxlength >>}
<%- if not loop.last %>,<% endif -%>
<%- if item.comment %>  /* << item.comment >> */<% endif -%>
<% endfor %>
    ];
    if net ~ bogons then return true;
    return false;
}

/*
    This filter is used for peers for which
    we cannot do strict IRR filtering
*/
filter ebgp_unfiltered_peering_import
prefix set acceptable_sizes;
int set bogon_asns;
{
    # ignore bogon AS_PATHs
    bogon_asns = BOGON_ASNS;
    if ( bgp_path ~ bogon_asns ) then {
        print "Reject: bogon AS_PATH: ", net, " ", bgp_path;
        reject;
    }

    if ( is_coloclue_more_specific() ) then reject;
    if ( is_bogon() ) then reject;
    if roa_check('rpki', net, bgp_path.last) = ROA_INVALID then {
        print "ROA check failed for ", net, " ASN ", bgp_path.last;
        reject;
    }
<%- if afi == "ipv4" %>
    acceptable_sizes = [ 0.0.0.0/0{8,24} ];
<%- elif afi == "ipv6" %>
    acceptable_sizes = [ 2000::/3{12,48} ];
<%- endif %>
    if ( net ~ acceptable_sizes ) then {
        bgp_med = 0;
        bgp_local_pref = 100;
        bgp_community.add((8283,1));
        bgp_large_community.add((8283, 0, 1));
        accept;
    }
    reject;
}
